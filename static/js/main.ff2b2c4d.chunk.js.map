{"version":3,"sources":["components/TodoInput.js","utils/todoHelper.js","components/TodoOptions.js","components/Todo.js","components/TodoList.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["TodoInput","addTodo","useState","todo","setTodo","error","setError","onSubmit","e","preventDefault","trim","length","className","value","onChange","target","placeholder","autoFocus","type","TodoHelper","setTodos","this","newTodo","title","isDone","id","Date","now","todos","allTodos","newTodos","filter","todoItem","TodoOptions","setFilter","onClick","Todo","deleteTodo","resolveTodo","editTodo","todoRef","useRef","ref","class","checked","window","confirm","current","classList","add","setTimeout","prompt","edited","TodoList","todoItems","setTodoItems","todoHelper","useEffect","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","innerRef","map","idx","draggableId","draggableProps","dragHandleProps","App","localStorage","savedTodos","getItem","JSON","parse","setItem","stringify","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ff2b2c4d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function TodoInput({ addTodo }) {\r\n    const [todo, setTodo] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (todo.trim().length === 0) {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        addTodo(todo);\r\n        setTodo(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input\">\r\n                <input\r\n                    value={todo}\r\n                    onChange={(e) => {\r\n                        setTodo(e.target.value);\r\n                        if (e.target.value.trim() !== \"\") setError(false);\r\n                    }}\r\n                    placeholder=\"To do ??\"\r\n                    autoFocus\r\n                />\r\n                <button type=\"submit\"><i className=\"fas fa-plus\"></i></button>\r\n            </div>\r\n            {error && <p className=\"error-message\">Oops! Todo cannot be blank</p>}\r\n        </form>\r\n    )\r\n}\r\n","class TodoHelper {\r\n    constructor(setTodos) {\r\n        this.setTodos = setTodos;\r\n    }\r\n\r\n    addTodo(todo) {\r\n        const newTodo = {\r\n            title: todo,\r\n            isDone: false,\r\n            id: Date.now()\r\n        };\r\n\r\n        this.setTodos(todos => [...todos, newTodo]);\r\n    }\r\n\r\n    deleteTodo(allTodos, id) {\r\n        let newTodos = allTodos;\r\n        newTodos = newTodos.filter(todoItem => todoItem.id !== id);\r\n        this.setTodos(newTodos);\r\n    }\r\n\r\n    resolveTodo(allTodos, id) {\r\n        this.setTodos(allTodos.filter(todoItem => {\r\n            if (todoItem.id === id) {\r\n                todoItem.isDone = !todoItem.isDone;\r\n            }\r\n            return todoItem;\r\n        }))\r\n    }\r\n\r\n    editTodo(allTodos, id, title) {\r\n        this.setTodos(allTodos.filter(todoItem => {\r\n            if (todoItem.id === id) {\r\n                todoItem.title = title;\r\n            }\r\n            return todoItem;\r\n        }))\r\n    }\r\n}\r\n\r\nexport default TodoHelper;","import React from 'react';\r\n\r\nexport default function TodoOptions({ setFilter, filter }) {\r\n    return (\r\n        <div className=\"options\">\r\n            <button className={filter === \"all\" ? \"selected-btn\" : \"\"} onClick={() => setFilter(\"all\")}>All</button>\r\n            <button className={filter === \"done\" ? \"selected-btn\" : \"\"} onClick={() => setFilter(\"done\")}>Completed</button>\r\n            <button className={filter === \"todo\" ? \"selected-btn\" : \"\"} onClick={() => setFilter(\"todo\")}>Todo</button>\r\n        </div>\r\n    )\r\n}\r\n","import { useRef } from 'react';\r\n\r\nexport default function Todo({ todo, deleteTodo, resolveTodo, editTodo }) {\r\n    const todoRef = useRef();\r\n\r\n    const askToDeleteTodo = () => {\r\n        if (window.confirm) {\r\n            const permission = window.confirm(\"Are you sure ??\")\r\n            if (!permission) return;\r\n        }\r\n\r\n        todoRef.current.classList.add('fall'); // fall animation\r\n        setTimeout(() => { // fall animation needs at least 1 sec \r\n            deleteTodo();\r\n        }, 1000)\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        if (window.prompt) {\r\n            const edited = prompt(\"Edit todo\", todo.title);\r\n            if (edited) {\r\n                editTodo(edited);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`todo ${todo.isDone ? 'todo-fill' : ''}`} ref={todoRef}>\r\n            <div className=\"todo-content\">\r\n                {todo.isDone && <div onClick={resolveTodo} className=\"checked-btn\">\r\n                    <i class=\"fas fa-check\"></i>\r\n                </div>}\r\n                {!todo.isDone && <input onChange={() => resolveTodo()} className=\"checkbox\" type=\"checkbox\" checked={todo.isDone} />}\r\n                <p className={todo.isDone ? \"completed-task\" : \"\"}>{todo.title}</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"todo-delete\" onClick={askToDeleteTodo}><i className=\"far fa-trash-alt\"></i></button>\r\n                <button className=\"todo-edit\" onClick={handleEdit}><i className=\"far fa-edit\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Todo from './Todo';\r\n\r\nexport default function TodoList({ todoItems, setTodoItems, todoHelper, filter }) {\r\n    const [todos, setTodos] = useState(todoItems || []);\r\n\r\n    useEffect(() => {\r\n        setTodos(todoItems)\r\n    }, [todoItems])\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const items = Array.from(todos);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        setTodos(items);\r\n        setTodoItems(items);\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n            <Droppable droppableId=\"todos\">\r\n                {(provided) => (\r\n                    <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {todos !== \"\" && todos.map((todo, idx) => {\r\n                            if (filter === \"done\" && !todo.isDone) return null;\r\n                            if (filter === \"todo\" && todo.isDone) return null;\r\n                            return (\r\n                                <Draggable key={idx} draggableId={`item-${idx}`} index={idx}>\r\n                                    {(provided) => <li\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        ref={provided.innerRef}\r\n                                    >\r\n                                        <Todo\r\n                                            todo={todo}\r\n                                            key={todo.id}\r\n                                            deleteTodo={() => todoHelper.deleteTodo(todos, todo.id)}\r\n                                            resolveTodo={() => todoHelper.resolveTodo(todos, todo.id)}\r\n                                            editTodo={(title) => todoHelper.editTodo(todos, todo.id, title)}\r\n                                        />\r\n                                    </li>}\r\n                                </Draggable>\r\n                            )\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport TodoInput from './components/TodoInput';\r\nimport TodoHelper from './utils/todoHelper';\r\nimport TodoOptions from './components/TodoOptions';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = useState(\"\");\r\n    const [filter, setFilter] = useState(\"all\");\r\n\r\n    const todoHelper = new TodoHelper(setTodos);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage) return;\r\n\r\n        if (todos === \"\") {\r\n            let savedTodos = localStorage.getItem(\"todos\");\r\n            if (savedTodos && savedTodos.length !== 0) {\r\n                setTodos(JSON.parse(savedTodos))\r\n            }\r\n        } else {\r\n            localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n        }\r\n\r\n    }, [todos]);\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Todo App</h1>\r\n            <TodoInput addTodo={(todo) => todoHelper.addTodo(todo)} />\r\n            <TodoOptions filter={filter} setFilter={setFilter} />\r\n            <TodoList todoItems={todos} setTodoItems={setTodos} filter={filter} todoHelper={todoHelper} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}